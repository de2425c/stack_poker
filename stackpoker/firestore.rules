rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow users to read any user profile
      allow read: if request.auth != null;
      // Allow users to write only their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // UserFollows collection - centralized follow relationships
    match /userFollows/{followId} {
      // Allow any authenticated user to read follow relationships
      allow read: if request.auth != null;
      
      // Allow authenticated users to create follow relationships
      // but only if they are the follower (followerId matches their uid)
      allow create: if request.auth != null 
        && request.auth.uid == resource.data.followerId;
      
      // Allow authenticated users to delete follow relationships
      // but only if they are the follower (followerId matches their uid)
      allow delete: if request.auth != null 
        && request.auth.uid == resource.data.followerId;
      
      // Prevent updates to existing follow relationships
      allow update: if false;
    }
    
    // Posts collection (if you have one)
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Stakes collection
    match /stakes/{stakeId} {
      // Allow read if the user is either the staker or the staked player
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.stakerUserId || request.auth.uid == resource.data.stakedPlayerUserId);
      
      // Allow create if the user is the one being staked
      allow create: if request.auth != null && request.auth.uid == request.resource.data.stakedPlayerUserId;
      
      // Allow update if the user is part of the stake (either staker or staked)
      allow update: if request.auth != null &&
                  (request.auth.uid == resource.data.stakerUserId || request.auth.uid == resource.data.stakedPlayerUserId);
                  
      // Allow delete only by the person who was staked
      allow delete: if request.auth != null && request.auth.uid == resource.data.stakedPlayerUserId;
    }
    
    // Add other collections as needed
    match /{document=**} {
      // Default: deny all access to other collections
      allow read, write: if false;
    }
  }
} 